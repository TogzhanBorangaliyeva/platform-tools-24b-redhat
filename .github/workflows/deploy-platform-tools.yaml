# This worflow is primarily for platform/devops tools that need to be deployed into K8s cluster
# or tools that don't belong to Terraform
name: 'Workflow - Deploy Platform Tools'

on:
  push:
    branches:
      - feature/**
      - main

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: "us-east-1"
  ENVIRONMENT_STAGE: "dev"
  ROLE_TO_ASSUME : "arn:aws:iam::539247466139:role/platform-tools-24b-redhat-GHA-role"

jobs:
  deploy-platform-tools:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    environment: dev

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          role-session-name: GitHubActionsRoleSession
          aws-region: ${{ env.AWS_REGION }}

      # Login to EKS, make sure to switch to the permanent cluster created with terraform once it's up
      - name: Login to EKS - update kubeconfig
        run: aws eks update-kubeconfig --name redhat-eks-cluster-${{ env.ENVIRONMENT_STAGE }} --region $AWS_REGION

      # Install Helm
      - name: Install Helm
        uses: Azure/setup-helm@v3
        with:
          version: latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      # Install Helm
      - name: Install Helm
        uses: Azure/setup-helm@v3
        with:
          version: latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # ###### Autoscaler #####
      # # Add Helm chart repository for Cluster Autoscaler
      # - name: Add Helm Repository for Cluster Autoscaler
      #   run: helm repo add autoscaler https://kubernetes.github.io/autoscaler

      # # Update Helm repositories
      # - name: Update Helm Repositories
      #   run: helm repo update

      # # Install Cluster Autoscaler using Helm
      # - name: Install Cluster Autoscaler using Helm
      #   run: |
      #     helm upgrade --install cluster-autoscaler autoscaler/cluster-autoscaler \
      #       --namespace kube-system \
      #       --set autoDiscovery.clusterName=redhat-eks-cluster-${{ env.ENVIRONMENT_STAGE }} \
      #       --set awsRegion=${{ env.AWS_REGION }} \
      #       --set rbac.create=true \
      #       --set securityGroupID=sg-028f2afe831712a0e # Optionally, replace with actual security group ID
      #   working-directory: ./cluster-autoscaler

      # # Optional: Verify that Cluster Autoscaler is deployed successfully
      # - name: Verify Cluster Autoscaler Deployment
      #   run: kubectl -n kube-system get deployments cluster-autoscaler
      #   working-directory: ./cluster-autoscaler  # Optionally, set this if needed


      - name: Finalize Deployment
        run: |
            echo "Final deployment steps and cleanup"