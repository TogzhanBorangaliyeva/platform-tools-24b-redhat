---
### Since EKS manages control plana, we want to disable monitoring for etcd, scheduler and contrtoller.
defaultRules:
  rules:
    etcd: false
    kubeScheduler: false
kubeControllerManager:
  enabled: false
kubeEtcd:
  enabled: false
kubeScheduler:
  enabled: false
### Also add custom labels. This label will be used by prometheus operator to select service monitor objects e.g. postgres
prometheus:
  prometheusSpec:
    serviceMonitorSelector:
      matchLabels:
        prometheus: devops
### Common labels. Add the same lables that you used periously. 
### If you will not add it prometheus operator will ignore default service monitors created by this helm chart. And prometheus target options would be empty.
commonLabels:
  prometheus: devops

grafana:
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - grafana.togzhanborangali.click
    # tls:
    #   - secretName: grafana-tls-secret
    #     hosts:
    #       - grafana.togzhanborangali.click
    annotations:
      kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"  # Enable TLS if you're using ACM certificates.
      
  # serviceAccount:
  #   create: false  # Set this to false because you already created it manually
  #   name: grafana-service-account  # The service account you created

  extraContainers:
    - name: aws-secrets-init
      image: amazon/aws-cli:latest
      command: ["/bin/sh", "-c"]
      args:
        - "/etc/grafana-secrets/fetch-secrets.sh"
      volumeMounts:
        - name: grafana-secrets-script
          mountPath: /etc/grafana-secrets
  extraVolumes:
    - name: grafana-secrets-script
      configMap:
        name: grafana-init-script

  # rbac:
  #   create: true  # If you want Helm to create the role and role binding automatically
  #   # You can customize the Role and RoleBinding names if needed
  #   role:
  #     apiGroups:
  #       - ""
  #     resources:
  #       - "secrets"
  #     verbs:
  #       - "get"
  #       - "list"
  #   roleBinding:
  #     subjects:
  #       - kind: ServiceAccount
  #         name: grafana-service-account
  #         namespace: monitoring
  #     roleRef:
  #       kind: Role
  #       name: grafana-secrets-role
  #       apiGroup: rbac.authorization.k8s.io
  
  # # Kubernetes secret mount settings.
  # secrets:
  #   # If you're using Kubernetes Secrets, specify the secret to mount
  #   adminUser:
  #     secretName: grafana-secrets
  #     secretKey: adminUser
  #   adminPassword:
  #     secretName: grafana-secrets
  #     secretKey: adminPassword


  # # SecretProviderClass Configuration (Used to integrate Secrets Manager secrets)
  # secretProviderClass:
  #   enabled: true
  #   name: grafana-secrets-provider  # Name of the SecretProviderClass you created
  #   secretMountPath: /mnt/secrets-store  # Mount point inside the container for the secrets

  # # Volumes and volume mounts for secrets from the CSI driver
  # volumes:
  #   - name: secrets-store
  #     csi:
  #       driver: secrets-store.csi.k8s.io
  #       readOnly: true
  #       volumeAttributes:
  #         secretProviderClass: grafana-secrets-provider

  # volumeMounts:
  #   - name: secrets-store
  #     mountPath: /mnt/secrets-store  # Path inside the container
  #     readOnly: true

    # # To make Grafana persistent (Using Statefulset)
  # #
  # persistence:
  #   enabled: true
  #   type: sts
  #   storageClassName: "storageClassName"
  #   accessModes:
  #     - ReadWriteOnce
  #   size: 20Gi
  #   finalizers:
  #     - kubernetes.io/pvc-protection